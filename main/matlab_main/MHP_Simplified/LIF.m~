function [v_m, lastSpk, spks] = LIF(v_m, th, lastSpk, i_e, i_i, time)
global N N_e tau_e tau_i rp_i rp_e v_l r_m i_bg dt noiseVar;   
    
        % Check who is refractory
       ref = [time-lastSpk(1:N_e) <= rp_e; time-lastSpk(N_e+1:end) <= rp_i];
       
       % Linear LIF equations....
       dv_m = dt .* ( (v_m - v_l) + r_m * (i_e + i_i + i_bg + randn(N,1) * noiseVar));
       dv_m(1:N_e) = dv_m(1:N_e)./tau_e; % exc
       dv_m(N_e+1:end) = dv_m(N_e+1:end) ./tau_i; % inh
       v_m = v_m + dv_m; % integrate
       v_m(ref) = v_r; % keep ref at the reset
       
        % find spikes
       spks = double(v_m >= th); 
       v_m(spks) = v_r; %reset voltage for neurons that spiked
       lastSpk(spks) = time; % set new last spike times
       
end